@page "/auditorias"
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensajes
@attribute [Authorize(Roles = "admin")]

<div class="form-group">
    <a class="btn btn-info" href="auditorias/crear">Nueva Auditoria</a>
</div>

<Paginacion PaginaActual="paginaActual" PaginaSeleccionada="paginaSeleccionada"
            PaginasTotales="paginasTotales"></Paginacion>

<ListadoGenerico Listado="Auditorias">
    <HayRegistrosCompleto>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th></th>
                    <th>Nro de Orden</th>
                    <th>Nro de Pieza</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Auditorias)
                {
                    <tr>
                        <td>
                            <a href="Auditorias/@item.ID" class="btn btn-success">Ver</a>
                            @*<button @onclick="@(() => BorrarPersona(item))" class="btn btn-danger">Borrar</button>*@
                        </td>
                        <td>@item.NroOrden</td>
                        <td>@item.NroPieza</td>
                    </tr>
                }
            </tbody>
        </table>
    </HayRegistrosCompleto>
</ListadoGenerico>

@code {
    public List<Auditoria> Auditorias { get; set; }
    private int paginaActual = 1;
    private int paginasTotales;

    protected async override Task OnInitializedAsync()
    {
        await Cargar();
    }

    private async Task paginaSeleccionada(int pagina)
    {
        paginaActual = pagina;
        await Cargar(pagina);
    }

    private async Task Cargar(int pagina = 1)
    {
        var responseHttp = await repositorio.Get<List<Auditoria>>($"api/Auditorias?pagina={pagina}");
        if (!responseHttp.Error)
        {
            Auditorias = responseHttp.Response;
            var conteo = responseHttp.HttpResponseMessage.Headers.GetValues("conteo").FirstOrDefault();
            paginasTotales = int.Parse(responseHttp.HttpResponseMessage.Headers.GetValues("totalPaginas").FirstOrDefault());
        }
    }

    //private async Task BorrarPersona(Persona persona)
    //{
    //    var responseHttp = await repositorio.Delete($"api/personas/{persona.Id}");
    //    if (responseHttp.Error)
    //    {
    //        await mostrarMensajes.MostrarMensajeError(await responseHttp.GetBody());
    //    }
    //    else
    //    {
    //        await Cargar();
    //    }

    //}
}
